{"NgbPanel":{"fileName":"src/accordion/accordion.ts","className":"NgbPanel","selector":"ngb-panel","exportAs":"ngbPanel","description":"","inputs":[{"name":"disabled","defaultValue":"false","type":"boolean","description":"A flag determining whether the panel is disabled or not.\nWhen disabled, the panel cannot be toggled."},{"name":"id","type":"string","description":"An optional id for the panel. The id should be unique.\nIf not provided, it will be auto-generated."},{"name":"open","defaultValue":"false","type":"boolean","description":"Defines whether the panel should be open initially."},{"name":"title","type":"string","description":"The title for the panel."}],"outputs":[]},"NgbAccordion":{"fileName":"src/accordion/accordion.ts","className":"NgbAccordion","selector":"ngb-accordion","description":"","inputs":[{"name":"closeOthers","type":"boolean","description":"A flag determining whether the other panels should be closed\nwhen a panel is opened."}],"outputs":[]},"NgbAlert":{"fileName":"src/alert/alert.ts","className":"NgbAlert","selector":"ngb-alert","description":"Alerts can be used to provide feedback messages.","inputs":[{"name":"dismissible","defaultValue":"true","type":"boolean","description":"A flag indicating if a given alert can be dismissed (closed) by a user. If this flag is set, a close button (in a\nform of a cross) will be displayed."},{"name":"type","defaultValue":"warning","type":"string","description":"Alert type (CSS class). Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\" and \"danger\"."}],"outputs":[{"name":"close","description":"An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts."}]},"NgbRadioGroup":{"fileName":"src/buttons/radio.ts","className":"NgbRadioGroup","selector":"[ngbRadioGroup][ngModel]","description":"Easily create Bootstrap-style radio buttons. A value of a selected button is bound to a variable\nspecified via ngModel.","inputs":[],"outputs":[]},"NgbRadioLabel":{"fileName":"src/buttons/radio.ts","className":"NgbRadioLabel","selector":"label.btn","description":"","inputs":[{"name":"checked","type":"boolean","description":""}],"outputs":[]},"NgbRadio":{"fileName":"src/buttons/radio.ts","className":"NgbRadio","selector":"input[type=radio]","description":"Marks an input of type \"radio\" as part of the NgbRadioGroup.","inputs":[{"name":"value","type":"any","description":"You can specify model value of a given radio by binding to the value property."}],"outputs":[]},"NgbSlide":{"fileName":"src/carousel/carousel.ts","className":"NgbSlide","selector":"template[ngbSlide]","description":"","inputs":[{"name":"id","type":"string","description":""}],"outputs":[]},"NgbCarousel":{"fileName":"src/carousel/carousel.ts","className":"NgbCarousel","selector":"ngb-carousel","exportAs":"ngbCarousel","description":"","inputs":[{"name":"activeId","type":"string","description":""},{"name":"interval","defaultValue":"5000","type":"number","description":""},{"name":"keyboard","defaultValue":"true","type":"boolean","description":""},{"name":"wrap","defaultValue":"true","type":"boolean","description":""}],"outputs":[]},"NgbCollapse":{"fileName":"/Users/wesleycho/repositories/ng-bootstrap/src/collapse/collapse.ts","className":"NgbCollapse","selector":"[ngbCollapse]","exportAs":"ngbCollapse","description":"The NgbCollapse directive provides a simple way to hide and show an element with animations.","inputs":[{"name":"ngbCollapse","defaultValue":"false","type":"boolean","description":"A flag indicating collapsed (true) or open (false) state."}],"outputs":[]},"NgbDropdown":{"fileName":"/Users/wesleycho/repositories/ng-bootstrap/src/dropdown/dropdown.ts","className":"NgbDropdown","selector":"[ngbDropdown]","exportAs":"ngbDropdown","description":"Transforms a node into a dropdown.","inputs":[{"name":"autoClose","defaultValue":"true","type":"boolean","description":"Indicates that dropdown should be closed when selecting one of dropdown items (click) or pressing ESC."},{"name":"open","defaultValue":"false","type":"boolean","description":"Defines whether or not the dropdown-menu is open initially."}],"outputs":[{"name":"openChange","description":"An event fired when the dropdown is opened or closed.\nEvent's payload equals whether dropdown is open."}]},"NgbDropdownToggle":{"fileName":"/Users/wesleycho/repositories/ng-bootstrap/src/dropdown/dropdown.ts","className":"NgbDropdownToggle","selector":"[ngbDropdownToggle]","description":"Allows the dropdown to be toggled via click. This directive is optional.","inputs":[],"outputs":[]},"NgbModalBackdrop":{"fileName":"src/modal/modal_backdrop.ts","className":"NgbModalBackdrop","selector":"ngb-modal-backdrop","description":"","inputs":[],"outputs":[]},"NgbModalWindow":{"fileName":"src/modal/modal_window.ts","className":"NgbModalWindow","selector":"ngb-modal-window","description":"","inputs":[{"name":"backdrop","defaultValue":"true","type":"boolean","description":""},{"name":"keyboard","defaultValue":"true","type":"boolean","description":""},{"name":"size","type":"string","description":""}],"outputs":[{"name":"close","description":""},{"name":"dismiss","description":""}]},"NgbPager":{"fileName":"src/pager/pager.ts","className":"NgbPager","selector":"ngb-pager","description":"","inputs":[{"name":"alignLinks","defaultValue":"false","type":"boolean","description":"A flag for determining whether links need to be aligned."},{"name":"noOfPages","defaultValue":"0","type":"number","description":"Number of pages present."},{"name":"page","defaultValue":"0","type":"number","description":"Current page."}],"outputs":[{"name":"pageChange","description":"An event fired when the page is changed.\nEvent's payload equals the current page."}]},"NgbPagination":{"fileName":"/Users/wesleycho/repositories/ng-bootstrap/src/pagination/pagination.ts","className":"NgbPagination","selector":"ngb-pagination","description":"","inputs":[{"name":"boundaryLinks","type":"boolean","description":"Whether to show the \"First\" and \"Last\" page links"},{"name":"collectionSize","type":"number | string","description":"Number of items in collection."},{"name":"page","type":"number | string","description":"Current page."},{"name":"pageSize","type":"number | string","description":"Number of items per page."}],"outputs":[{"name":"pageChange","description":"An event fired when the page is changed.\nEvent's payload equals the current page."}]},"NgbPopoverWindow":{"fileName":"src/popover/popover.ts","className":"NgbPopoverWindow","selector":"ngb-popover-window","description":"","inputs":[{"name":"placement","defaultValue":"top","type":"string","description":""},{"name":"title","type":"string","description":""}],"outputs":[]},"NgbProgressbar":{"fileName":"/Users/wesleycho/repositories/ng-bootstrap/src/progressbar/progressbar.ts","className":"NgbProgressbar","selector":"ngb-progressbar","description":"Directive that can be used to provide feedback on the progress of a workflow or an action.","inputs":[{"name":"animated","type":"boolean | string","description":"A flag indicating if a progress bar should be animated when the value changes. Takes effect only for browsers\nsupporting CSS3 animations."},{"name":"max","defaultValue":"100","type":"number","description":"Maximal value to be displayed in the progressbar."},{"name":"striped","type":"boolean | string","description":"A flag indicating if a progress bar should be displayed as striped."},{"name":"type","type":"string","description":"Type of progress bar, can be one of \"success\", \"info\", \"warning\" or \"danger\"."},{"name":"value","type":"number","description":"Current value to be displayed in the progressbar. Should be smaller or equal to \"max\" value."}],"outputs":[]},"NgbRating":{"fileName":"/Users/wesleycho/repositories/ng-bootstrap/src/rating/rating.ts","className":"NgbRating","selector":"ngb-rating","exportAs":"ngbRating","description":"","inputs":[{"name":"max","defaultValue":"10","type":"number","description":""},{"name":"rate","type":"number","description":""},{"name":"readonly","type":"boolean","description":""}],"outputs":[{"name":"hover","description":""},{"name":"leave","description":""},{"name":"rateChange","description":""}]},"NgbTabTitle":{"fileName":"/Users/wesleycho/repositories/ng-bootstrap/src/tabset/tabset.ts","className":"NgbTabTitle","selector":"template[ngbTabTitle]","description":"","inputs":[],"outputs":[]},"NgbTabContent":{"fileName":"/Users/wesleycho/repositories/ng-bootstrap/src/tabset/tabset.ts","className":"NgbTabContent","selector":"template[ngbTabContent]","description":"","inputs":[],"outputs":[]},"NgbTab":{"fileName":"/Users/wesleycho/repositories/ng-bootstrap/src/tabset/tabset.ts","className":"NgbTab","selector":"ngb-tab","description":"A directive representing an individual tab.","inputs":[{"name":"disabled","defaultValue":"false","type":"boolean","description":"Allows toggling disabled state of a given state. Disabled tabs can't be selected."},{"name":"id","type":"string","description":"Unique tab identifier. Must be unique for the entire document for proper accessibility support."},{"name":"title","type":"string","description":"Simple (string only) title. Use the \"NgbTabTitle\" directive for more complex use-cases."}],"outputs":[]},"NgbTabset":{"fileName":"/Users/wesleycho/repositories/ng-bootstrap/src/tabset/tabset.ts","className":"NgbTabset","selector":"ngb-tabset","exportAs":"ngbTabset","description":"A component that makes it easy to create tabbed interface.","inputs":[{"name":"activeId","type":"string","description":"An identifier of a tab that should be selected (active)."},{"name":"type","defaultValue":"tabs","type":"string","description":"Type of navigation to be used for tabs. Can be one of 'tabs' or 'pills'."}],"outputs":[]},"NgbTooltipWindow":{"fileName":"src/tooltip/tooltip.ts","className":"NgbTooltipWindow","selector":"ngb-tooltip-window","description":"","inputs":[{"name":"placement","defaultValue":"top","type":"string","description":""}],"outputs":[]}}
